apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-service
  namespace: plateforme-educative
  labels:
    app: content-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: content-service
  template:
    metadata:
      labels:
        app: content-service
    spec:
      containers:
      - name: content-service
        image: cof1409/plateforme-educative-content-service:c6915e2
        imagePullPolicy: Always
        ports:
        - containerPort: 3002
        env:
        - name: NODE_ENV
          value: "development"
        - name: PORT
          value: "3002"
        - name: SERVICE_NAME
          value: "ContentServiceK8s"
        - name: DB_HOST
          value: "db-content-postgres"
        - name: DB_PORT
          value: "5432"
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: PG_CONTENT_SERVICE_DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: PG_CONTENT_SERVICE_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: PG_CONTENT_SERVICE_PASSWORD
        - name: MONGO_URI 
          value: "mongodb://mongo-details-db:27017/ressources_details_db" 
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: JWT_SECRET
        readinessProbe:
          httpGet:
            path: /
            port: 3002
          initialDelaySeconds: 20 
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /
            port: 3002
          initialDelaySeconds: 40
          periodSeconds: 20
