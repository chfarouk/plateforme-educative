name: CI/CD - User Service - Build, Push & Update K8s Manifest

on:
  push:
    branches: [ "main" ]
    paths:
      - 'user-service/**'
      - '.github/workflows/user-service-ci-cd.yml'
  workflow_dispatch:

jobs:
  build-push-and-update-manifest:
    name: Build, Push Image & Update K8s Manifest for User Service
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.ACTIONS_PAT }} 

    - name: Get short SHA for image tag
      id: get_sha
      run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Define Service-Specific Variables
      id: service_vars
      run: |
        echo "IMAGE_NAME_ON_HUB=cof1409/plateforme-educative-user-service" >> $GITHUB_ENV
        echo "SERVICE_DIR_NAME=user-service" >> $GITHUB_ENV
        echo "SERVICE_NAME_FOR_COMMIT=UserSvc" >> $GITHUB_ENV
        echo "K8S_MANIFEST_PATH=kubernetes/user-service/deployment.yaml" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push User Service image
      uses: docker/build-push-action@v5
      with:
        context: ./${{ env.SERVICE_DIR_NAME }}
        file: ./${{ env.SERVICE_DIR_NAME }}/Dockerfile
        push: true
        tags: |
          ${{ env.IMAGE_NAME_ON_HUB }}:latest
          ${{ env.IMAGE_NAME_ON_HUB }}:${{ env.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update Kubernetes deployment manifest
      run: |
        MANIFEST_FILE="${{ env.K8S_MANIFEST_PATH }}"
        NEW_IMAGE_WITH_TAG="${{ env.IMAGE_NAME_ON_HUB }}:${{ env.IMAGE_TAG }}"
        
        echo "Updating $MANIFEST_FILE with image: $NEW_IMAGE_WITH_TAG"
        
        # awk remplacera la ligne contenant 'image: <IMAGE_NAME_ON_HUB_WITHOUT_TAG>:'
        # Assumes IMAGE_NAME_ON_HUB is like 'user/repo'
        IMAGE_BASE_FOR_AWK=$(echo "${{ env.IMAGE_NAME_ON_HUB }}" | sed 's/\//\\\//g') # Escape slashes for awk pattern
        awk -v IMAGE_LINE="        image: ${NEW_IMAGE_WITH_TAG}" -v IMG_SEARCH_PATTERN="image:.*${IMAGE_BASE_FOR_AWK}:" '$0 ~ IMG_SEARCH_PATTERN {print IMAGE_LINE; next} {print}' $MANIFEST_FILE > tmp_manifest.yaml && mv tmp_manifest.yaml $MANIFEST_FILE
        
        echo "--- Content of $MANIFEST_FILE after update: ---"
        cat $MANIFEST_FILE
        echo "--- End of $MANIFEST_FILE ---"
        git status

    - name: Commit and push manifest changes
      run: |
        git config --global user.name "GitHub Actions Bot (${{ env.SERVICE_NAME_FOR_COMMIT }})"
        git config --global user.email "chfarouk@users.noreply.github.com" 

        echo "Vérification des changements pour ${{ env.K8S_MANIFEST_PATH }}"
        git add ${{ env.K8S_MANIFEST_PATH }}
        
        if git diff --staged --quiet; then
          echo "Aucun changement dans le manifeste de déploiement pour ${{ env.SERVICE_NAME_FOR_COMMIT }}."
        else
          echo "Changements détectés dans ${{ env.K8S_MANIFEST_PATH }}. Tentative de commit et push."
          git commit -m "CI: Update ${{ env.SERVICE_NAME_FOR_COMMIT }} K8s deployment to image tag ${{ env.IMAGE_TAG }} [skip ci]"
          
          echo "Tentative de git pull --rebase origin main..."
          git pull origin main --rebase 
          
          echo "Tentative de git push origin main..."
          git push origin main
          echo "Push réussi pour ${{ env.SERVICE_NAME_FOR_COMMIT }}."
        fi